{"version":3,"file":"Products.controller.js","names":["getRouter","___util_router","ButtonType","sap_m_library","ValueState","sap_ui_core_library","formatter","_interopRequireDefault","__formatter","Products","Controller","extend","constructor","prototype","apply","this","arguments","AddItemDialog","MessageView","Popover","BackButton","onInit","_onInit","loadFragment","name","then","oFragment","byId","bindAggregation","path","template","MessageItem","title","counter","type","subtitle","description","setIcon","IconPool","getIconURI","catch","error","MessageToast","show","onItemSelect","_onItemSelect","oEvent","source","getSource","ctx","getBindingContext","data","getObject","router","navTo","id","ID","validate","_validate","input","key","getProperty","value","getValue","length","setValueState","Error","setValueStateText","Success","parseFloat","isNaN","getValues","_getValues","items","reduce","acc","item","errors","hasErrors","values","submit","_submit","content","getControlsByFieldGroupId","filter","getId","includes","form","jModel","JSONModel","correctItems","MessageType","Object","entries","map","_ref","join","keys","incorrectItems","_ref2","setData","_ref3","navigateBack","setModel","openBy","oModel","getView","getModel","payload","createEntry","properties","Math","floor","random","toString","close","submitChanges","success","onDialogPress","_onDialogPress","bind","addStyleClass","Dialog","beginButton","Button","Emphasized","text","press","endButton","addDependent","open","onChange","_onChange","onErrorBack","_onErrorBack","setVisible","closePopover","_closePopover","onErrorItemClick","_onErrorItemClick"],"sources":["Products.controller.ts"],"sourcesContent":["import type { Product } from \"@/model/types/ODataDemoModel\";\nimport { getRouter } from \"../util/router\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport { ButtonType } from \"sap/m/library\";\nimport type Event from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport Input from \"sap/m/Input\";\nimport VerticalLayout from \"sap/ui/layout/VerticalLayout\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport Popover from \"sap/m/Popover\";\nimport type Control from \"sap/ui/core/Control\";\nimport MessageView from \"sap/m/MessageView\";\nimport MessageItem, { type $MessageItemSettings } from \"sap/m/MessageItem\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport IconPool from \"sap/ui/core/IconPool\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport formatter from \"../model/formatter\";\n\ntype FormKeys = keyof Pick<Product, \"Name\" | \"Price\" | \"Rating\">;\ntype Form = {\n  values: Record<FormKeys, string>;\n  errors: Record<FormKeys, string>;\n  hasErrors: boolean;\n};\n\n/**\n * @namespace project1.controller\n */\nexport default class Products extends Controller {\n  private AddItemDialog: Dialog | null = null;\n  private MessageView: MessageView | null = null;\n  private Popover: Popover | null = null;\n  private BackButton: Button | null = null;\n\n  public formatter = formatter;\n\n  public onInit(): void {\n    /* ------------------------------- 1. Popover ------------------------------- */\n    this.loadFragment({\n      name: \"project1.view.fragments.Errors\",\n    })\n      .then((oFragment) => {\n        this.Popover = oFragment as Popover;\n        this.MessageView = this.byId(\"errorMessageView\") as MessageView;\n        this.MessageView.bindAggregation(\"items\", {\n          path: \"messageModel>/\",\n          template: new MessageItem({\n            title: \"{messageModel>title}\",\n            counter: \"{messageModel>counter}\",\n            type: \"{messageModel>type}\",\n            subtitle: \"{messageModel>subtitle}\",\n            description: \"{messageModel>description}\",\n          }),\n        });\n        this.BackButton = this.byId(\"errorBackButton\") as Button;\n        this.BackButton.setIcon(IconPool.getIconURI(\"nav-back\"));\n      })\n      .catch((error) => {\n        MessageToast.show(`Failed to load form validation with error: ${error}`);\n      });\n  }\n\n  /**\n   * handles item click and redirects to detail page\n   * @public\n   * @param {sap.ui.base.Event} oEvent Standard UI5 event object\n   */\n  public onItemSelect(oEvent: Event) {\n    const source = oEvent.getSource<ManagedObject>();\n    const ctx = source.getBindingContext();\n    const data = ctx?.getObject() as Product;\n    const router = getRouter(this);\n    router.navTo(\"detail\", { id: data.ID });\n  }\n\n  /**\n   * Utility function to validate input fields\n   * used both in liveChange of input fields and on submit\n   * @private\n   * @param {Input} input Input field source\n   * @returns {boolean} wether the input is valid. `true` if valid\n   */\n  private validate(input: Input) {\n    const key = input.getProperty(\"name\") as keyof Form[\"values\"];\n    let error = \"\";\n    switch (key) {\n      case \"Name\": {\n        const value = input.getValue();\n        if (value.length === 0) {\n          input.setValueState(ValueState.Error);\n          error = \"Name is required\";\n          input.setValueStateText(error);\n        } else if (value.length > 40) {\n          input.setValueState(ValueState.Error);\n          error = \"Name must be less than 40 characters\";\n          input.setValueStateText(error);\n        } else {\n          input.setValueState(ValueState.Success);\n          input.setValueStateText(\"\");\n        }\n        break;\n      }\n      case \"Price\": {\n        const value = parseFloat(input.getValue());\n        if (isNaN(value)) {\n          input.setValueState(ValueState.Error);\n          error = \"Price must be a number\";\n          input.setValueStateText(error);\n        } else if (value < 0) {\n          input.setValueState(ValueState.Error);\n          error = \"Price must be a positive number\";\n          input.setValueStateText(error);\n        } else {\n          input.setValueState(ValueState.Success);\n          input.setValueStateText(\"\");\n        }\n        break;\n      }\n      case \"Rating\": {\n        const value = parseFloat(input.getValue());\n        if (isNaN(value)) {\n          input.setValueState(ValueState.Error);\n          error = \"Rating must be a number\";\n          input.setValueStateText(error);\n        } else if (value % 1 !== 0) {\n          input.setValueState(ValueState.Error);\n          error = \"Rating must be a whole number\";\n          input.setValueStateText(error);\n        } else if (value < 0 || value > 5) {\n          input.setValueState(ValueState.Error);\n          error = \"Rating must be between 0 and 5\";\n          input.setValueStateText(error);\n        } else {\n          input.setValueState(ValueState.Success);\n          input.setValueStateText(\"\");\n        }\n        break;\n      }\n    }\n    return error;\n  }\n\n  /**\n   * Transforms the input fields into a form object\n   * @param {Control[]} items Indivual inputs\n   * @returns {Form} Form object with values and errors\n   */\n  private getValues(items: Control[]) {\n    return items.reduce(\n      (acc, item) => {\n        const input = item as Input;\n        const key = input.getProperty(\"name\") as keyof Form[\"values\"];\n        const error = this.validate(input);\n        const value = input.getValue(); // OData always accepts strings\n\n        if (error) {\n          acc.errors[key] = error;\n          acc.hasErrors = true;\n        } else {\n          acc.values[key] = value;\n        }\n\n        return acc;\n      },\n      { errors: {}, values: {}, hasErrors: false } as Form\n    );\n  }\n\n  private submit(oEvent: Event, content: VerticalLayout) {\n    const items = content\n      .getControlsByFieldGroupId(\"newProduct\")\n      // filter out popup elements related to input\n      .filter((item) => !item.getId().includes(\"popup\"));\n\n    const form = this.getValues(items);\n\n    if (form.hasErrors) {\n      const jModel = new JSONModel();\n      const correctItems = {\n        type: MessageType.Success,\n        title: \"Correctly filled inputs\",\n        subtitle: \"No further action necessary\",\n        description: Object.entries(form.values)\n          .map(([key, value]) => `• ${key}: ${value}`)\n          .join(\"\\n\"),\n        counter: Object.keys(form.values).length,\n      } satisfies $MessageItemSettings;\n      const incorrectItems = {\n        type: MessageType.Error,\n        title: \"Incorrect fields\",\n        subtitle: \"Please correct the following errors\",\n        description: Object.entries(form.errors)\n          .map(([key, value]) => `• ${key}: ${value}`)\n          .join(\"\\n\"),\n        counter: Object.keys(form.errors).length,\n      } satisfies $MessageItemSettings;\n      // Add items to the view, remove items with 0 children\n      jModel.setData([correctItems, incorrectItems].filter(({ counter }) => counter));\n      this.MessageView?.navigateBack();\n      this.MessageView?.setModel(jModel, \"messageModel\");\n      this.Popover?.openBy(oEvent.getSource<Control>());\n    } else {\n      // succesful form validation - let's submit the row!\n      const oModel = this.getView()?.getModel() as ODataModel;\n      const payload: Partial<{\n        [K in keyof Product]: K extends FormKeys ? string : Product[K];\n      }> = form.values;\n      oModel.createEntry(\"/Products\", {\n        properties: {\n          ...payload,\n          // necessary otherwise the request fails\n          ID: Math.floor(Math.random() * 1001).toString(),\n        },\n      });\n      this.AddItemDialog?.close();\n      oModel.submitChanges({\n        success: () => {\n          MessageToast.show(\"Product successfully created!\");\n          this.AddItemDialog?.close();\n        },\n        error: () => {\n          MessageToast.show(\"Failed to create product! Please try again\");\n          this.AddItemDialog?.close();\n        },\n      });\n    }\n  }\n\n  /**\n   * opens a dialog to add a new product\n   * @public\n   */\n  public onDialogPress() {\n    if (!this.AddItemDialog) {\n      const close = () => this.AddItemDialog?.close();\n      close.bind(this);\n\n      this.loadFragment({\n        name: \"project1.view.fragments.NewProduct\",\n      })\n        .then((oFragment) => {\n          const content = oFragment as VerticalLayout;\n          content.addStyleClass(\"sapUiContentPadding\");\n          this.AddItemDialog = new Dialog({\n            title: \"New Product\",\n            content,\n            beginButton: new Button({\n              type: ButtonType.Emphasized,\n              text: \"OK\",\n              press: (oEvent) => this.submit(oEvent, content),\n            }),\n            endButton: new Button({\n              text: \"Close\",\n              press: close,\n            }),\n          });\n          this.getView()?.addDependent(this.AddItemDialog);\n          this.AddItemDialog.open();\n        })\n        .catch(() => {\n          MessageToast.show(\"Failed to load new product form\");\n        });\n    }\n    this.AddItemDialog?.open();\n  }\n\n  public onChange(oEvent: Event) {\n    const input = oEvent.getSource<Input>();\n    this.validate(input);\n  }\n\n  public onErrorBack() {\n    this.MessageView?.navigateBack();\n    this.BackButton?.setVisible(false);\n  }\n\n  public closePopover() {\n    this.Popover?.close();\n  }\n\n  public onErrorItemClick() {\n    this.BackButton?.setVisible(true);\n  }\n}\n"],"mappings":"0aACSA,EAASC,EAAA,mBAGTC,EAAUC,EAAA,oBAMVC,EAAUC,EAAA,oBAUZC,EAASC,EAAAC,GAShB,MAGqBC,EAAiBC,EAAUC,OAAA,gCAAAC,YAAA,SAAAA,IAAAF,EAAAG,UAAAD,YAAAE,MAAAC,KAAAC,WAAAD,KACtCE,cAA+B,KAAIF,KACnCG,YAAkC,KAAIH,KACtCI,QAA0B,KAAIJ,KAC9BK,WAA4B,KAAIL,KAEjCT,UAAYA,CAAS,EAErBe,OAAM,SAAAC,IAEXP,KAAKQ,aAAa,CAChBC,KAAM,mCAELC,KAAMC,IACLX,KAAKI,QAAUO,EACfX,KAAKG,YAAcH,KAAKY,KAAK,oBAC7BZ,KAAKG,YAAYU,gBAAgB,QAAS,CACxCC,KAAM,iBACNC,SAAU,IAAIC,EAAY,CACxBC,MAAO,uBACPC,QAAS,yBACTC,KAAM,sBACNC,SAAU,0BACVC,YAAa,iCAGjBrB,KAAKK,WAAaL,KAAKY,KAAK,mBAC5BZ,KAAKK,WAAWiB,QAAQC,EAASC,WAAW,YAAY,GAEzDC,MAAOC,IACNC,EAAaC,KAAK,8CAA8CF,IAAQ,EAE9E,EAOOG,aAAY,SAAAC,EAACC,GAClB,MAAMC,EAASD,EAAOE,YACtB,MAAMC,EAAMF,EAAOG,oBACnB,MAAMC,EAAOF,GAAKG,YAClB,MAAMC,EAASrD,EAAUe,MACzBsC,EAAOC,MAAM,SAAU,CAAEC,GAAIJ,EAAKK,IACpC,EASQC,SAAQ,SAAAC,EAACC,GACf,MAAMC,EAAMD,EAAME,YAAY,QAC9B,IAAIpB,EAAQ,GACZ,OAAQmB,GACN,IAAK,OAAQ,CACX,MAAME,EAAQH,EAAMI,WACpB,GAAID,EAAME,SAAW,EAAG,CACtBL,EAAMM,cAAc7D,EAAW8D,OAC/BzB,EAAQ,mBACRkB,EAAMQ,kBAAkB1B,EAC1B,MAAO,GAAIqB,EAAME,OAAS,GAAI,CAC5BL,EAAMM,cAAc7D,EAAW8D,OAC/BzB,EAAQ,uCACRkB,EAAMQ,kBAAkB1B,EAC1B,KAAO,CACLkB,EAAMM,cAAc7D,EAAWgE,SAC/BT,EAAMQ,kBAAkB,GAC1B,CACA,KACF,CACA,IAAK,QAAS,CACZ,MAAML,EAAQO,WAAWV,EAAMI,YAC/B,GAAIO,MAAMR,GAAQ,CAChBH,EAAMM,cAAc7D,EAAW8D,OAC/BzB,EAAQ,yBACRkB,EAAMQ,kBAAkB1B,EAC1B,MAAO,GAAIqB,EAAQ,EAAG,CACpBH,EAAMM,cAAc7D,EAAW8D,OAC/BzB,EAAQ,kCACRkB,EAAMQ,kBAAkB1B,EAC1B,KAAO,CACLkB,EAAMM,cAAc7D,EAAWgE,SAC/BT,EAAMQ,kBAAkB,GAC1B,CACA,KACF,CACA,IAAK,SAAU,CACb,MAAML,EAAQO,WAAWV,EAAMI,YAC/B,GAAIO,MAAMR,GAAQ,CAChBH,EAAMM,cAAc7D,EAAW8D,OAC/BzB,EAAQ,0BACRkB,EAAMQ,kBAAkB1B,EAC1B,MAAO,GAAIqB,EAAQ,IAAM,EAAG,CAC1BH,EAAMM,cAAc7D,EAAW8D,OAC/BzB,EAAQ,gCACRkB,EAAMQ,kBAAkB1B,EAC1B,MAAO,GAAIqB,EAAQ,GAAKA,EAAQ,EAAG,CACjCH,EAAMM,cAAc7D,EAAW8D,OAC/BzB,EAAQ,iCACRkB,EAAMQ,kBAAkB1B,EAC1B,KAAO,CACLkB,EAAMM,cAAc7D,EAAWgE,SAC/BT,EAAMQ,kBAAkB,GAC1B,CACA,KACF,EAEF,OAAO1B,CACT,EAOQ8B,UAAS,SAAAC,EAACC,GAChB,OAAOA,EAAMC,OACX,CAACC,EAAKC,KACJ,MAAMjB,EAAQiB,EACd,MAAMhB,EAAMD,EAAME,YAAY,QAC9B,MAAMpB,EAAQ1B,KAAK0C,SAASE,GAC5B,MAAMG,EAAQH,EAAMI,WAEpB,GAAItB,EAAO,CACTkC,EAAIE,OAAOjB,GAAOnB,EAClBkC,EAAIG,UAAY,IAClB,KAAO,CACLH,EAAII,OAAOnB,GAAOE,CACpB,CAEA,OAAOa,CAAG,EAEZ,CAAEE,OAAQ,CAAC,EAAGE,OAAQ,CAAC,EAAGD,UAAW,OAEzC,EAEQE,OAAM,SAAAC,EAACnC,EAAeoC,GAC5B,MAAMT,EAAQS,EACXC,0BAA0B,cAE1BC,OAAQR,IAAUA,EAAKS,QAAQC,SAAS,UAE3C,MAAMC,EAAOxE,KAAKwD,UAAUE,GAE5B,GAAIc,EAAKT,UAAW,CAClB,MAAMU,EAAS,IAAIC,EACnB,MAAMC,EAAe,CACnBxD,KAAMyD,EAAYvB,QAClBpC,MAAO,0BACPG,SAAU,8BACVC,YAAawD,OAAOC,QAAQN,EAAKR,QAC9Be,IAAIC,IAAA,IAAEnC,EAAKE,GAAMiC,EAAA,MAAK,KAAKnC,MAAQE,GAAO,GAC1CkC,KAAK,MACR/D,QAAS2D,OAAOK,KAAKV,EAAKR,QAAQf,QAEpC,MAAMkC,EAAiB,CACrBhE,KAAMyD,EAAYzB,MAClBlC,MAAO,mBACPG,SAAU,sCACVC,YAAawD,OAAOC,QAAQN,EAAKV,QAC9BiB,IAAIK,IAAA,IAAEvC,EAAKE,GAAMqC,EAAA,MAAK,KAAKvC,MAAQE,GAAO,GAC1CkC,KAAK,MACR/D,QAAS2D,OAAOK,KAAKV,EAAKV,QAAQb,QAGpCwB,EAAOY,QAAQ,CAACV,EAAcQ,GAAgBd,OAAOiB,IAAA,IAACpE,QAAEA,GAASoE,EAAA,OAAKpE,CAAO,IAC7ElB,KAAKG,aAAaoF,eAClBvF,KAAKG,aAAaqF,SAASf,EAAQ,gBACnCzE,KAAKI,SAASqF,OAAO1D,EAAOE,YAC9B,KAAO,CAEL,MAAMyD,EAAS1F,KAAK2F,WAAWC,WAC/B,MAAMC,EAEDrB,EAAKR,OACV0B,EAAOI,YAAY,YAAa,CAC9BC,WAAY,IACPF,EAEHpD,GAAIuD,KAAKC,MAAMD,KAAKE,SAAW,MAAMC,cAGzCnG,KAAKE,eAAekG,QACpBV,EAAOW,cAAc,CACnBC,QAASA,KACP3E,EAAaC,KAAK,iCAClB5B,KAAKE,eAAekG,OAAO,EAE7B1E,MAAOA,KACLC,EAAaC,KAAK,8CAClB5B,KAAKE,eAAekG,OAAO,GAGjC,CACF,EAMOG,cAAa,SAAAC,IAClB,IAAKxG,KAAKE,cAAe,CACvB,MAAMkG,EAAQA,IAAMpG,KAAKE,eAAekG,QACxCA,EAAMK,KAAKzG,MAEXA,KAAKQ,aAAa,CAChBC,KAAM,uCAELC,KAAMC,IACL,MAAMwD,EAAUxD,EAChBwD,EAAQuC,cAAc,uBACtB1G,KAAKE,cAAgB,IAAIyG,EAAO,CAC9B1F,MAAO,cACPkD,UACAyC,YAAa,IAAIC,EAAO,CACtB1F,KAAMhC,EAAW2H,WACjBC,KAAM,KACNC,MAAQjF,GAAW/B,KAAKiE,OAAOlC,EAAQoC,KAEzC8C,UAAW,IAAIJ,EAAO,CACpBE,KAAM,QACNC,MAAOZ,MAGXpG,KAAK2F,WAAWuB,aAAalH,KAAKE,eAClCF,KAAKE,cAAciH,MAAM,GAE1B1F,MAAM,KACLE,EAAaC,KAAK,kCAAkC,EAE1D,CACA5B,KAAKE,eAAeiH,MACtB,EAEOC,SAAQ,SAAAC,EAACtF,GACd,MAAMa,EAAQb,EAAOE,YACrBjC,KAAK0C,SAASE,EAChB,EAEO0E,YAAW,SAAAC,IAChBvH,KAAKG,aAAaoF,eAClBvF,KAAKK,YAAYmH,WAAW,MAC9B,EAEOC,aAAY,SAAAC,IACjB1H,KAAKI,SAASgG,OAChB,EAEOuB,iBAAgB,SAAAC,IACrB5H,KAAKK,YAAYmH,WAAW,KAC9B,IAAC,OA9PkB9H,CAAQ","ignoreList":[]}